
分配公共符号
公共符号            大小              文件

task_stack_mm       0x2800            start.o
task_stack_hd       0x2800            start.o
inode_table         0x18000           start.o
task_stack_init     0x2800            start.o
dirent_buf          0x200             start.o
task_stack_c        0x2800            start.o
task_stack_b        0x2800            start.o
inode_buf           0x10000           start.o
tty_table           0x140             main.o
fs_msg              0x2c              start.o
nr_current_console  0x4               start.o
f_desc_table        0x180             start.o
fsbuf               0x11000           start.o
hd_msg              0x2c              start.o
sem_mutex           0x90              main.o
p_current_proc      0x4               start.o
mm_msg              0x2c              start.o
task_stack_tty      0x2800            start.o
p_current_tty       0x4               keyboard.o
ticks               0x4               start.o
array               0x28              main.o
task_stack_fs       0x2800            start.o
console_table       0x40              main.o
irq_table           0x40              start.o
hd_buf              0x400             hd.o
proc_table          0x3100            start.o
task_stack_a        0x2800            start.o
smap_buf            0xa00             start.o
f_reenter           0x4               main.o
imap_buf            0x200             start.o

舍弃的输入节

 .note.GNU-stack
                0x0000000000000000        0x0 start.o
 .note.GNU-stack
                0x0000000000000000        0x0 main.o
 .note.GNU-stack
                0x0000000000000000        0x0 protect.o
 .note.GNU-stack
                0x0000000000000000        0x0 clock.o
 .note.GNU-stack
                0x0000000000000000        0x0 keyboard.o
 .note.GNU-stack
                0x0000000000000000        0x0 tty.o
 .note.GNU-stack
                0x0000000000000000        0x0 printf.o
 .note.GNU-stack
                0x0000000000000000        0x0 vsprintf.o
 .note.GNU-stack
                0x0000000000000000        0x0 hd.o
 .note.GNU-stack
                0x0000000000000000        0x0 fs_main.o
 .note.GNU-stack
                0x0000000000000000        0x0 io.o
 .note.GNU-stack
                0x0000000000000000        0x0 console.o
 .note.GNU-stack
                0x0000000000000000        0x0 proc.o
 .note.GNU-stack
                0x0000000000000000        0x0 open.o
 .note.GNU-stack
                0x0000000000000000        0x0 misc.o
 .note.GNU-stack
                0x0000000000000000        0x0 close.o
 .note.GNU-stack
                0x0000000000000000        0x0 rdwt.o
 .note.GNU-stack
                0x0000000000000000        0x0 unlink.o
 .note.GNU-stack
                0x0000000000000000        0x0 mm_main.o
 .note.GNU-stack
                0x0000000000000000        0x0 fork.o
 .note.GNU-stack
                0x0000000000000000        0x0 irq.o

内存配置

名称           来源             长度             属性
*default*        0x0000000000000000 0xffffffffffffffff

链结器命令稿和内存映射

段 .text 的地址设置为 0x1b400
LOAD kernel.o
LOAD klib.o
LOAD start.o
LOAD 8259A.o
LOAD main.o
LOAD protect.o
LOAD clock.o
LOAD syscall.o
LOAD keyboard.o
LOAD tty.o
LOAD string.o
LOAD printf.o
LOAD vsprintf.o
LOAD hd.o
LOAD fs_main.o
LOAD io.o
LOAD console.o
LOAD proc.o
LOAD open.o
LOAD misc.o
LOAD close.o
LOAD rdwt.o
LOAD unlink.o
LOAD mm_main.o
LOAD fork.o
LOAD irq.o
                [!provide]                        PROVIDE (__executable_start, 0x8048000)
                0x0000000008048094                . = (0x8048000 + SIZEOF_HEADERS)

.interp
 *(.interp)

.note.gnu.build-id
 *(.note.gnu.build-id)

.hash
 *(.hash)

.gnu.hash
 *(.gnu.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.dyn        0x0000000008048094        0x0
 *(.rel.init)
 *(.rel.text .rel.text.* .rel.gnu.linkonce.t.*)
 .rel.text      0x0000000008048094        0x0 kernel.o
 *(.rel.fini)
 *(.rel.rodata .rel.rodata.* .rel.gnu.linkonce.r.*)
 *(.rel.data.rel.ro .rel.data.rel.ro.* .rel.gnu.linkonce.d.rel.ro.*)
 *(.rel.data .rel.data.* .rel.gnu.linkonce.d.*)
 .rel.data      0x0000000008048094        0x0 kernel.o
 *(.rel.tdata .rel.tdata.* .rel.gnu.linkonce.td.*)
 *(.rel.tbss .rel.tbss.* .rel.gnu.linkonce.tb.*)
 *(.rel.ctors)
 *(.rel.dtors)
 *(.rel.got)
 *(.rel.bss .rel.bss.* .rel.gnu.linkonce.b.*)
 *(.rel.ifunc)

.rel.plt        0x0000000008048094        0x0
 *(.rel.plt)
                [!provide]                        PROVIDE (__rel_iplt_start, .)
 *(.rel.iplt)
 .rel.iplt      0x0000000008048094        0x0 kernel.o
                [!provide]                        PROVIDE (__rel_iplt_end, .)

.init
 *(SORT(.init))

.plt            0x00000000080480a0        0x0
 *(.plt)
 *(.iplt)
 .iplt          0x00000000080480a0        0x0 kernel.o

.plt.got
 *(.plt.got)

.text           0x000000000001b400     0x4d23
 *(.text.unlikely .text.*_unlikely .text.unlikely.*)
 *(.text.exit .text.exit.*)
 *(.text.startup .text.startup.*)
 *(.text.hot .text.hot.*)
 *(.text .stub .text.* .gnu.linkonce.t.*)
 .text          0x000000000001b400      0x660 kernel.o
                0x000000000001b400                _start
                0x000000000001b475                divide_error
                0x000000000001b47b                reserved
                0x000000000001b481                nmi
                0x000000000001b487                breakpoint
                0x000000000001b48d                overflow
                0x000000000001b493                out_of_bound
                0x000000000001b499                invalid_opcode
                0x000000000001b49f                no_math_coprocessor
                0x000000000001b4a5                double_fault
                0x000000000001b4ab                coprocessor_error
                0x000000000001b4b1                invalid_tss
                0x000000000001b4b7                not_present
                0x000000000001b4bd                stack_error
                0x000000000001b4c3                general_protect
                0x000000000001b4c7                page_fault
                0x000000000001b4cd                intel_reserved
                0x000000000001b4d3                mcu_fault
                0x000000000001b4d9                align_check
                0x000000000001b4df                mechine
                0x000000000001b4e5                simd_error
                0x000000000001b4fa                hwint_0
                0x000000000001b548                hwint_1
                0x000000000001b596                hwint_2
                0x000000000001b5e4                hwint_3
                0x000000000001b632                hwint_4
                0x000000000001b680                hwint_5
                0x000000000001b6ce                hwint_6
                0x000000000001b71c                hwint_7
                0x000000000001b76a                hwint_8
                0x000000000001b7ba                hwint_9
                0x000000000001b80a                hwint_10
                0x000000000001b85a                hwint_11
                0x000000000001b8aa                hwint_12
                0x000000000001b8fa                hwint_13
                0x000000000001b94a                hwint_14
                0x000000000001b99a                hwint_15
                0x000000000001b9ea                sys_call
                0x000000000001ba3e                proc_begin
 .text          0x000000000001ba60      0x1fa klib.o
                0x000000000001ba60                memcpy
                0x000000000001ba83                memset
                0x000000000001ba9e                memcmp
                0x000000000001bac7                println
                0x000000000001bb06                print
                0x000000000001bb41                printmsg
                0x000000000001bb8b                printchar
                0x000000000001bbb9                backspace
                0x000000000001bbd1                itoa
                0x000000000001bc10                in_byte
                0x000000000001bc1a                out_byte
                0x000000000001bc26                port_read
                0x000000000001bc3e                port_write
                0x000000000001bc56                disable_int
                0x000000000001bc58                enable_int
 .text          0x000000000001bc5a      0x574 start.o
                0x000000000001bc5a                excep_handler
                0x000000000001bcc1                default_irq_handler
                0x000000000001bcf7                cstart
 *fill*         0x000000000001c1ce        0x2 
 .text          0x000000000001c1d0       0x5c 8259A.o
                0x000000000001c1d0                init_8259A
 .text          0x000000000001c22c      0x417 main.o
                0x000000000001c22c                kernel_main
                0x000000000001c491                sleep
                0x000000000001c4cb                Init
                0x000000000001c53b                TaskA
                0x000000000001c5c8                TaskB
                0x000000000001c63e                TaskC
 .text          0x000000000001c643      0x1f7 protect.o
                0x000000000001c643                init_desc
                0x000000000001c6a5                init_idt_desc
                0x000000000001c707                init_prot
                0x000000000001c77d                get_base
                0x000000000001c7cb                get_limit
                0x000000000001c800                granularity
 .text          0x000000000001c83a      0x21f clock.o
                0x000000000001c83a                schedule
                0x000000000001c8b4                disp_time
                0x000000000001c9c2                clock_handler
                0x000000000001c9f0                init_clock
 *fill*         0x000000000001ca59        0x7 
 .text          0x000000000001ca60       0x60 syscall.o
                0x000000000001ca60                get_ticks
                0x000000000001ca68                sendrecv
                0x000000000001ca7c                getpid
                0x000000000001ca84                getppid
                0x000000000001ca8c                printk
                0x000000000001ca98                sem_init
                0x000000000001caa8                sem_post
                0x000000000001cab4                sem_wait
 .text          0x000000000001cac0      0x2aa keyboard.o
                0x000000000001cac0                keyboard_handler
                0x000000000001cb55                keyboard_read
                0x000000000001cd42                init_keyboard
 .text          0x000000000001cd6a      0x445 tty.o
                0x000000000001cd6a                Task_tty
                0x000000000001cdd2                init_tty
                0x000000000001ce32                init_console
                0x000000000001cebe                is_current_console
                0x000000000001ceeb                tty_printchar
                0x000000000001cf40                tty_printstr
                0x000000000001cf8c                tty_backspace
                0x000000000001d015                disp_tips
                0x000000000001d06c                reset_kb_buf
                0x000000000001d0ac                parse_input
 *fill*         0x000000000001d1af        0x1 
 .text          0x000000000001d1b0       0x50 string.o
                0x000000000001d1b0                strlen
                0x000000000001d1c5                strcpy
                0x000000000001d1de                strncmp
 .text          0x000000000001d200       0x7c printf.o
                0x000000000001d200                printf
                0x000000000001d255                sprintf
 .text          0x000000000001d27c      0x12a vsprintf.o
                0x000000000001d27c                vsprintf
 .text          0x000000000001d3a6      0x57f hd.o
                0x000000000001d3a6                Task_hd
                0x000000000001d47e                init_hd
                0x000000000001d517                hd_cmd_out
                0x000000000001d614                get_hd_info
                0x000000000001d64f                disp_hd_info
                0x000000000001d7c2                hd_open
                0x000000000001d7fc                hd_write
                0x000000000001d87c                hd_read
                0x000000000001d8fc                hd_handler
 .text          0x000000000001d925      0x4d3 fs_main.o
                0x000000000001d925                Task_fs
                0x000000000001d9d9                init_fs
                0x000000000001da6f                mkfs
                0x000000000001dd80                write_hd
                0x000000000001ddbc                read_hd
 .text          0x000000000001ddf8      0x122 io.o
                0x000000000001ddf8                set_cursor_pos
                0x000000000001de60                set_video_start
                0x000000000001dec8                init_video
 .text          0x000000000001df1a       0xbf console.o
                0x000000000001df1a                select_console
                0x000000000001df6b                scroll_screen
 .text          0x000000000001dfd9      0xb02 proc.o
                0x000000000001dfd9                sys_get_ticks
                0x000000000001dfe3                sys_sendrecv
                0x000000000001e091                sys_getpid
                0x000000000001e09e                sys_getppid
                0x000000000001e0ab                sys_printk
                0x000000000001e0e7                sys_sem_init
                0x000000000001e124                sys_sem_post
                0x000000000001e18e                sys_sem_wait
                0x000000000001e201                enqueue
                0x000000000001e27e                dequeue
                0x000000000001e302                va2la
                0x000000000001e332                msg_send
                0x000000000001e47a                msg_recv
                0x000000000001e693                block
                0x000000000001e6c7                unblock
                0x000000000001e6f6                deadlock
                0x000000000001e76f                inform_int
                0x000000000001e815                interrupt_wait
                0x000000000001e831                reset_msg
                0x000000000001e84c                init_send_queue
                0x000000000001e87f                enqueue_send
                0x000000000001e90b                dequeue_send
                0x000000000001e992                isEmpty
                0x000000000001e9a4                dump_proc
                0x000000000001ea00                dump_msg
                0x000000000001ea2a                failure
                0x000000000001ea86                halt
 .text          0x000000000001eadb      0x844 open.o
                0x000000000001eadb                open
                0x000000000001eb1d                do_open
                0x000000000001edc3                create_file
                0x000000000001ee1e                alloc_imap_bit
                0x000000000001ef43                alloc_smap_bits
                0x000000000001f090                alloc_inode
                0x000000000001f19d                alloc_dir_entry
                0x000000000001f26d                get_inode
 .text          0x000000000001f31f       0x81 misc.o
                0x000000000001f31f                find_file
 .text          0x000000000001f3a0      0x101 close.o
                0x000000000001f3a0                close
                0x000000000001f3cb                do_close
                0x000000000001f447                clear_inode
 .text          0x000000000001f4a1      0x374 rdwt.o
                0x000000000001f4a1                write
                0x000000000001f4d8                read
                0x000000000001f50f                do_rdwt
 .text          0x000000000001f815      0x467 unlink.o
                0x000000000001f815                unlink
                0x000000000001f851                do_unlink
 .text          0x000000000001fc7c       0xc0 mm_main.o
                0x000000000001fc7c                Task_mm
                0x000000000001fcf8                alloc_mem
 .text          0x000000000001fd3c      0x2b3 fork.o
                0x000000000001fd3c                fork
                0x000000000001fda2                do_fork
 .text          0x000000000001ffef      0x134 irq.o
                0x000000000001ffef                put_irq_handler
                0x0000000000020013                enable_irq
                0x000000000002009d                disable_irq
 *(.gnu.warning)

.fini
 *(SORT(.fini))
                [!provide]                        PROVIDE (__etext, .)
                [!provide]                        PROVIDE (_etext, .)
                [!provide]                        PROVIDE (etext, .)

.rodata         0x0000000000020124      0x9df
 *(.rodata .rodata.* .gnu.linkonce.r.*)
 .rodata        0x0000000000020124       0xdf start.o
 *fill*         0x0000000000020203        0x1 
 .rodata        0x0000000000020204       0xe8 main.o
 .rodata        0x00000000000202ec       0x1e clock.o
 .rodata        0x000000000002030a        0xd tty.o
 *fill*         0x0000000000020317        0x1 
 .rodata        0x0000000000020318      0x13f hd.o
 *fill*         0x0000000000020457        0x1 
 .rodata        0x0000000000020458       0xeb fs_main.o
 *fill*         0x0000000000020543        0x1 
 .rodata        0x0000000000020544      0x199 proc.o
 *fill*         0x00000000000206dd        0x3 
 .rodata        0x00000000000206e0      0x19e open.o
 .rodata        0x000000000002087e       0x1e close.o
 .rodata        0x000000000002089c       0x17 rdwt.o
 *fill*         0x00000000000208b3        0x1 
 .rodata        0x00000000000208b4      0x17f unlink.o
 *fill*         0x0000000000020a33        0x1 
 .rodata        0x0000000000020a34       0x60 mm_main.o
 .rodata        0x0000000000020a94       0x6f fork.o

.rodata1
 *(.rodata1)

.eh_frame_hdr
 *(.eh_frame_hdr)
 *(.eh_frame_entry .eh_frame_entry.*)

.eh_frame       0x0000000000020b04      0xd5c
 *(.eh_frame)
 .eh_frame      0x0000000000020b04       0x78 start.o
 .eh_frame      0x0000000000020b7c       0xac main.o
                                         0xc4 (松开之前的大小)
 .eh_frame      0x0000000000020c28       0xc0 protect.o
                                         0xd8 (松开之前的大小)
 .eh_frame      0x0000000000020ce8       0x90 clock.o
                                         0xa8 (松开之前的大小)
 .eh_frame      0x0000000000020d78       0x60 keyboard.o
                                         0x78 (松开之前的大小)
 .eh_frame      0x0000000000020dd8      0x140 tty.o
                                        0x158 (松开之前的大小)
 .eh_frame      0x0000000000020f18       0x44 printf.o
                                         0x5c (松开之前的大小)
 .eh_frame      0x0000000000020f5c       0x20 vsprintf.o
                                         0x38 (松开之前的大小)
 .eh_frame      0x0000000000020f7c      0x11c hd.o
                                        0x134 (松开之前的大小)
 .eh_frame      0x0000000000021098       0xa0 fs_main.o
                                         0xb8 (松开之前的大小)
 .eh_frame      0x0000000000021138       0x60 io.o
                                         0x78 (松开之前的大小)
 .eh_frame      0x0000000000021198       0x40 console.o
                                         0x58 (松开之前的大小)
 .eh_frame      0x00000000000211d8      0x368 proc.o
                                        0x380 (松开之前的大小)
 .eh_frame      0x0000000000021540      0x10c open.o
                                        0x124 (松开之前的大小)
 .eh_frame      0x000000000002164c       0x20 misc.o
                                         0x38 (松开之前的大小)
 .eh_frame      0x000000000002166c       0x60 close.o
                                         0x78 (松开之前的大小)
 .eh_frame      0x00000000000216cc       0x60 rdwt.o
                                         0x78 (松开之前的大小)
 .eh_frame      0x000000000002172c       0x44 unlink.o
                                         0x5c (松开之前的大小)
 .eh_frame      0x0000000000021770       0x3c mm_main.o
                                         0x54 (松开之前的大小)
 .eh_frame      0x00000000000217ac       0x4c fork.o
                                         0x64 (松开之前的大小)
 .eh_frame      0x00000000000217f8       0x68 irq.o
                                         0x80 (松开之前的大小)
 *(.eh_frame.*)

.gcc_except_table
 *(.gcc_except_table .gcc_except_table.*)

.gnu_extab
 *(.gnu_extab*)

.exception_ranges
 *(.exception_ranges .exception_ranges*)
                0x0000000000022860                . = DATA_SEGMENT_ALIGN (0x1000, 0x1000)

.eh_frame
 *(.eh_frame)
 *(.eh_frame.*)

.gnu_extab
 *(.gnu_extab)

.gcc_except_table
 *(.gcc_except_table .gcc_except_table.*)

.exception_ranges
 *(.exception_ranges .exception_ranges*)

.tdata
 *(.tdata .tdata.* .gnu.linkonce.td.*)

.tbss
 *(.tbss .tbss.* .gnu.linkonce.tb.*)
 *(.tcommon)

.preinit_array  0x0000000000022860        0x0
                [!provide]                        PROVIDE (__preinit_array_start, .)
 *(.preinit_array)
                [!provide]                        PROVIDE (__preinit_array_end, .)

.init_array     0x0000000000022860        0x0
                [!provide]                        PROVIDE (__init_array_start, .)
 *(SORT(.init_array.*) SORT(.ctors.*))
 *(.init_array EXCLUDE_FILE(*crtend?.o *crtend.o *crtbegin?.o *crtbegin.o) .ctors)
                [!provide]                        PROVIDE (__init_array_end, .)

.fini_array     0x0000000000022860        0x0
                [!provide]                        PROVIDE (__fini_array_start, .)
 *(SORT(.fini_array.*) SORT(.dtors.*))
 *(.fini_array EXCLUDE_FILE(*crtend?.o *crtend.o *crtbegin?.o *crtbegin.o) .dtors)
                [!provide]                        PROVIDE (__fini_array_end, .)

.ctors
 *crtbegin.o(.ctors)
 *crtbegin?.o(.ctors)
 *(EXCLUDE_FILE(*crtend?.o *crtend.o) .ctors)
 *(SORT(.ctors.*))
 *(.ctors)

.dtors
 *crtbegin.o(.dtors)
 *crtbegin?.o(.dtors)
 *(EXCLUDE_FILE(*crtend?.o *crtend.o) .dtors)
 *(SORT(.dtors.*))
 *(.dtors)

.jcr
 *(.jcr)

.data.rel.ro
 *(.data.rel.ro.local* .gnu.linkonce.d.rel.ro.local.*)
 *(.data.rel.ro .data.rel.ro.* .gnu.linkonce.d.rel.ro.*)

.dynamic
 *(.dynamic)

.got
 *(.got)
 *(.igot)
                0x0000000000022860                . = DATA_SEGMENT_RELRO_END (., (SIZEOF (.got.plt) >= 0xc)?0xc:0x0)

.got.plt        0x0000000000022860        0x0
 *(.got.plt)
 *(.igot.plt)
 .igot.plt      0x0000000000022860        0x0 kernel.o

.data           0x0000000000022860     0x1260
 *(.data .data.* .gnu.linkonce.d.*)
 .data          0x0000000000022860     0x1074 kernel.o
                0x0000000000022860                GDT
                0x0000000000023066                IDT
                0x000000000002386c                TSS
 .data          0x00000000000238d4        0x8 klib.o
                0x00000000000238d4                PrintPos
                0x00000000000238d8                MainPrintPos
 *fill*         0x00000000000238dc        0x4 
 .data          0x00000000000238e0       0x50 start.o
                0x00000000000238e0                err_msg_list
 .data          0x0000000000023930        0x0 main.o
 .data          0x0000000000023930        0x0 protect.o
 .data          0x0000000000023930        0x0 clock.o
 *fill*         0x0000000000023930       0x10 
 .data          0x0000000000023940       0x45 keyboard.o
                0x0000000000023940                keymap
 .data          0x0000000000023985        0x0 tty.o
 .data          0x0000000000023985        0x0 printf.o
 .data          0x0000000000023985        0x0 vsprintf.o
 .data          0x0000000000023985        0x0 hd.o
 .data          0x0000000000023985        0x0 fs_main.o
 .data          0x0000000000023985        0x0 io.o
 .data          0x0000000000023985        0x0 console.o
 *fill*         0x0000000000023985       0x1b 
 .data          0x00000000000239a0      0x120 proc.o
                0x00000000000239a0                task_table
                0x0000000000023aa0                syscall_table
 .data          0x0000000000023ac0        0x0 open.o
 .data          0x0000000000023ac0        0x0 misc.o
 .data          0x0000000000023ac0        0x0 close.o
 .data          0x0000000000023ac0        0x0 rdwt.o
 .data          0x0000000000023ac0        0x0 unlink.o
 .data          0x0000000000023ac0        0x0 mm_main.o
 .data          0x0000000000023ac0        0x0 fork.o
 .data          0x0000000000023ac0        0x0 irq.o

.data1
 *(.data1)
                0x0000000000023ac0                _edata = .
                [!provide]                        PROVIDE (edata, .)
                0x0000000000023ac0                . = .
                0x0000000000023ac0                __bss_start = .

.bss            0x0000000000023ac0    0x52020
 *(.dynbss)
 *(.bss .bss.* .gnu.linkonce.b.*)
 .bss           0x0000000000023ac0      0x800 kernel.o
 .bss           0x00000000000242c0        0x0 start.o
 .bss           0x00000000000242c0        0x0 main.o
 .bss           0x00000000000242c0        0x0 protect.o
 .bss           0x00000000000242c0        0x0 clock.o
 .bss           0x00000000000242c0        0x0 keyboard.o
 .bss           0x00000000000242c0        0x0 tty.o
 .bss           0x00000000000242c0        0x0 printf.o
 .bss           0x00000000000242c0        0x0 vsprintf.o
 .bss           0x00000000000242c0        0x0 hd.o
 .bss           0x00000000000242c0        0x0 fs_main.o
 .bss           0x00000000000242c0        0x0 io.o
 .bss           0x00000000000242c0        0x0 console.o
 .bss           0x00000000000242c0        0x0 proc.o
 .bss           0x00000000000242c0        0x0 open.o
 .bss           0x00000000000242c0        0x0 misc.o
 .bss           0x00000000000242c0        0x0 close.o
 .bss           0x00000000000242c0        0x0 rdwt.o
 .bss           0x00000000000242c0        0x0 unlink.o
 .bss           0x00000000000242c0        0x0 mm_main.o
 .bss           0x00000000000242c0        0x0 fork.o
 .bss           0x00000000000242c0        0x0 irq.o
 *(COMMON)
 COMMON         0x00000000000242c0    0x511a0 start.o
                0x00000000000242c0                task_stack_mm
                0x0000000000026ac0                task_stack_hd
                0x00000000000292c0                inode_table
                0x00000000000412c0                task_stack_init
                0x0000000000043ac0                dirent_buf
                0x0000000000043cc0                task_stack_c
                0x00000000000464c0                task_stack_b
                0x0000000000048cc0                inode_buf
                0x0000000000058cc0                fs_msg
                0x0000000000058cec                nr_current_console
                0x0000000000058d00                f_desc_table
                0x0000000000058e80                fsbuf
                0x0000000000069e80                hd_msg
                0x0000000000069eac                p_current_proc
                0x0000000000069ec0                mm_msg
                0x0000000000069f00                task_stack_tty
                0x000000000006c700                ticks
                0x000000000006c720                task_stack_fs
                0x000000000006ef20                irq_table
                0x000000000006ef60                proc_table
                0x0000000000072060                task_stack_a
                0x0000000000074860                smap_buf
                0x0000000000075260                imap_buf
 COMMON         0x0000000000075460      0x264 main.o
                0x0000000000075460                tty_table
                0x00000000000755a0                sem_mutex
                0x0000000000075640                array
                0x0000000000075680                console_table
                0x00000000000756c0                f_reenter
 COMMON         0x00000000000756c4        0x4 keyboard.o
                0x00000000000756c4                p_current_tty
 *fill*         0x00000000000756c8       0x18 
 COMMON         0x00000000000756e0      0x400 hd.o
                0x00000000000756e0                hd_buf
                0x0000000000075ae0                . = ALIGN ((. != 0x0)?0x4:0x1)
                0x0000000000075ae0                . = ALIGN (0x4)
                0x0000000000075ae0                . = SEGMENT_START ("ldata-segment", .)
                0x0000000000075ae0                . = ALIGN (0x4)
                0x0000000000075ae0                _end = .
                [!provide]                        PROVIDE (end, .)
                0x0000000000075ae0                . = DATA_SEGMENT_END (.)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x34
 *(.comment)
 .comment       0x0000000000000000       0x34 start.o
                                         0x35 (松开之前的大小)
 .comment       0x0000000000000034       0x35 main.o
 .comment       0x0000000000000034       0x35 protect.o
 .comment       0x0000000000000034       0x35 clock.o
 .comment       0x0000000000000034       0x35 keyboard.o
 .comment       0x0000000000000034       0x35 tty.o
 .comment       0x0000000000000034       0x35 printf.o
 .comment       0x0000000000000034       0x35 vsprintf.o
 .comment       0x0000000000000034       0x35 hd.o
 .comment       0x0000000000000034       0x35 fs_main.o
 .comment       0x0000000000000034       0x35 io.o
 .comment       0x0000000000000034       0x35 console.o
 .comment       0x0000000000000034       0x35 proc.o
 .comment       0x0000000000000034       0x35 open.o
 .comment       0x0000000000000034       0x35 misc.o
 .comment       0x0000000000000034       0x35 close.o
 .comment       0x0000000000000034       0x35 rdwt.o
 .comment       0x0000000000000034       0x35 unlink.o
 .comment       0x0000000000000034       0x35 mm_main.o
 .comment       0x0000000000000034       0x35 fork.o
 .comment       0x0000000000000034       0x35 irq.o

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info .gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line .debug_line.* .debug_line_end)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges
 *(.debug_ranges)

.debug_macro
 *(.debug_macro)

.gnu.attributes
 *(.gnu.attributes)

/DISCARD/
 *(.note.GNU-stack)
 *(.gnu_debuglink)
 *(.gnu.lto_*)
OUTPUT(kernel.bin elf32-i386)
