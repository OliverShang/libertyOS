
分配公共符号
公共符号            大小              文件

task_stack_mm       0x2800            start.o
task_stack_hd       0x2800            start.o
inode_table         0x18000           start.o
task_stack_init     0x2800            start.o
dirent_buf          0x200             start.o
task_stack_c        0x2800            start.o
task_stack_b        0x2800            start.o
inode_buf           0x10000           start.o
tty_table           0x80              main.o
fs_msg              0x2c              start.o
nr_current_console  0x4               start.o
f_desc_table        0x180             start.o
fsbuf               0x11000           start.o
hd_msg              0x2c              start.o
p_current_proc      0x4               start.o
mm_msg              0x2c              start.o
task_stack_tty      0x2800            start.o
p_current_tty       0x4               keyboard.o
ticks               0x4               start.o
task_stack_fs       0x2800            start.o
console_table       0x40              main.o
hd_buf              0x400             hd.o
proc_table          0x3100            start.o
task_stack_a        0x2800            start.o
smap_buf            0xa00             start.o
f_reenter           0x4               main.o
imap_buf            0x200             start.o

舍弃的输入节

 .note.GNU-stack
                0x0000000000000000        0x0 start.o
 .note.GNU-stack
                0x0000000000000000        0x0 main.o
 .note.GNU-stack
                0x0000000000000000        0x0 protect.o
 .note.GNU-stack
                0x0000000000000000        0x0 clock.o
 .note.GNU-stack
                0x0000000000000000        0x0 keyboard.o
 .note.GNU-stack
                0x0000000000000000        0x0 tty.o
 .note.GNU-stack
                0x0000000000000000        0x0 printf.o
 .note.GNU-stack
                0x0000000000000000        0x0 vsprintf.o
 .note.GNU-stack
                0x0000000000000000        0x0 hd.o
 .note.GNU-stack
                0x0000000000000000        0x0 fs_main.o
 .note.GNU-stack
                0x0000000000000000        0x0 io.o
 .note.GNU-stack
                0x0000000000000000        0x0 console.o
 .note.GNU-stack
                0x0000000000000000        0x0 proc.o
 .note.GNU-stack
                0x0000000000000000        0x0 open.o
 .note.GNU-stack
                0x0000000000000000        0x0 misc.o
 .note.GNU-stack
                0x0000000000000000        0x0 close.o
 .note.GNU-stack
                0x0000000000000000        0x0 rdwt.o
 .note.GNU-stack
                0x0000000000000000        0x0 unlink.o
 .note.GNU-stack
                0x0000000000000000        0x0 mm_main.o
 .note.GNU-stack
                0x0000000000000000        0x0 fork.o

内存配置

名称           来源             长度             属性
*default*        0x0000000000000000 0xffffffffffffffff

链结器命令稿和内存映射

段 .text 的地址设置为 0x1b400
LOAD kernel.o
LOAD klib.o
LOAD start.o
LOAD 8259A.o
LOAD main.o
LOAD protect.o
LOAD clock.o
LOAD syscall.o
LOAD keyboard.o
LOAD tty.o
LOAD string.o
LOAD printf.o
LOAD vsprintf.o
LOAD hd.o
LOAD fs_main.o
LOAD io.o
LOAD console.o
LOAD proc.o
LOAD open.o
LOAD misc.o
LOAD close.o
LOAD rdwt.o
LOAD unlink.o
LOAD mm_main.o
LOAD fork.o
                [!provide]                        PROVIDE (__executable_start, 0x8048000)
                0x0000000008048094                . = (0x8048000 + SIZEOF_HEADERS)

.interp
 *(.interp)

.note.gnu.build-id
 *(.note.gnu.build-id)

.hash
 *(.hash)

.gnu.hash
 *(.gnu.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.dyn        0x0000000008048094        0x0
 *(.rel.init)
 *(.rel.text .rel.text.* .rel.gnu.linkonce.t.*)
 .rel.text      0x0000000008048094        0x0 kernel.o
 *(.rel.fini)
 *(.rel.rodata .rel.rodata.* .rel.gnu.linkonce.r.*)
 *(.rel.data.rel.ro .rel.data.rel.ro.* .rel.gnu.linkonce.d.rel.ro.*)
 *(.rel.data .rel.data.* .rel.gnu.linkonce.d.*)
 .rel.data      0x0000000008048094        0x0 kernel.o
 *(.rel.tdata .rel.tdata.* .rel.gnu.linkonce.td.*)
 *(.rel.tbss .rel.tbss.* .rel.gnu.linkonce.tb.*)
 *(.rel.ctors)
 *(.rel.dtors)
 *(.rel.got)
 *(.rel.bss .rel.bss.* .rel.gnu.linkonce.b.*)
 *(.rel.ifunc)

.rel.plt        0x0000000008048094        0x0
 *(.rel.plt)
                [!provide]                        PROVIDE (__rel_iplt_start, .)
 *(.rel.iplt)
 .rel.iplt      0x0000000008048094        0x0 kernel.o
                [!provide]                        PROVIDE (__rel_iplt_end, .)

.init
 *(SORT(.init))

.plt            0x00000000080480a0        0x0
 *(.plt)
 *(.iplt)
 .iplt          0x00000000080480a0        0x0 kernel.o

.plt.got
 *(.plt.got)

.text           0x000000000001b400     0x4328
 *(.text.unlikely .text.*_unlikely .text.unlikely.*)
 *(.text.exit .text.exit.*)
 *(.text.startup .text.startup.*)
 *(.text.hot .text.hot.*)
 *(.text .stub .text.* .gnu.linkonce.t.*)
 .text          0x000000000001b400      0x24b kernel.o
                0x000000000001b400                _start
                0x000000000001b475                divide_error
                0x000000000001b47b                reserved
                0x000000000001b481                nmi
                0x000000000001b487                breakpoint
                0x000000000001b48d                overflow
                0x000000000001b493                out_of_bound
                0x000000000001b499                invalid_opcode
                0x000000000001b49f                no_math_coprocessor
                0x000000000001b4a5                double_fault
                0x000000000001b4ab                coprocessor_error
                0x000000000001b4b1                invalid_tss
                0x000000000001b4b7                not_present
                0x000000000001b4bd                stack_error
                0x000000000001b4c3                general_protect
                0x000000000001b4c7                page_fault
                0x000000000001b4cd                intel_reserved
                0x000000000001b4d3                mcu_fault
                0x000000000001b4d9                align_check
                0x000000000001b4df                mechine
                0x000000000001b4e5                simd_error
                0x000000000001b4fa                irq00_handler
                0x000000000001b535                irq01_handler
                0x000000000001b570                irq02_handler
                0x000000000001b574                irq03_handler
                0x000000000001b578                irq04_handler
                0x000000000001b57c                irq05_handler
                0x000000000001b580                irq06_handler
                0x000000000001b584                irq07_handler
                0x000000000001b588                irq08_handler
                0x000000000001b58c                irq09_handler
                0x000000000001b590                irq10_handler
                0x000000000001b594                irq11_handler
                0x000000000001b598                irq12_handler
                0x000000000001b59c                irq13_handler
                0x000000000001b5a0                irq14_handler
                0x000000000001b5e2                sys_call
                0x000000000001b629                proc_begin
 *fill*         0x000000000001b64b        0x5 
 .text          0x000000000001b650      0x1fa klib.o
                0x000000000001b650                memcpy
                0x000000000001b673                memset
                0x000000000001b68e                memcmp
                0x000000000001b6b7                println
                0x000000000001b6f6                print
                0x000000000001b731                printmsg
                0x000000000001b77b                printchar
                0x000000000001b7a9                backspace
                0x000000000001b7c1                itoa
                0x000000000001b800                in_byte
                0x000000000001b80a                out_byte
                0x000000000001b816                port_read
                0x000000000001b82e                port_write
                0x000000000001b846                disable_int
                0x000000000001b848                enable_int
 .text          0x000000000001b84a      0x534 start.o
                0x000000000001b84a                excep_handler
                0x000000000001b8b1                irq_handler
                0x000000000001b8e7                cstart
 *fill*         0x000000000001bd7e        0x2 
 .text          0x000000000001bd80       0x5c 8259A.o
                0x000000000001bd80                init_8259A
 .text          0x000000000001bddc      0x30b main.o
                0x000000000001bddc                kernel_main
                0x000000000001c037                delay
                0x000000000001c06e                Init
                0x000000000001c0d8                TaskA
                0x000000000001c0dd                TaskB
                0x000000000001c0e2                TaskC
 .text          0x000000000001c0e7      0x1f7 protect.o
                0x000000000001c0e7                init_desc
                0x000000000001c149                init_idt_desc
                0x000000000001c1ab                init_prot
                0x000000000001c221                get_base
                0x000000000001c26f                get_limit
                0x000000000001c2a4                granularity
 .text          0x000000000001c2de      0x1b6 clock.o
                0x000000000001c2de                schedule
                0x000000000001c358                disp_time
                0x000000000001c466                clock_handler
 *fill*         0x000000000001c494        0xc 
 .text          0x000000000001c4a0       0x38 syscall.o
                0x000000000001c4a0                get_ticks
                0x000000000001c4a8                sendrecv
                0x000000000001c4bc                getpid
                0x000000000001c4c4                getppid
                0x000000000001c4cc                printk
 .text          0x000000000001c4d8      0x273 keyboard.o
                0x000000000001c4d8                keyboard_handler
                0x000000000001c564                keyboard_read
 .text          0x000000000001c74b      0x3ff tty.o
                0x000000000001c74b                Task_tty
                0x000000000001c7b3                init_tty
                0x000000000001c80d                init_console
                0x000000000001c893                is_current_console
                0x000000000001c8c0                tty_printchar
                0x000000000001c915                tty_printstr
                0x000000000001c961                tty_backspace
                0x000000000001c9b6                disp_tips
                0x000000000001ca07                reset_kb_buf
                0x000000000001ca47                parse_input
 *fill*         0x000000000001cb4a        0x6 
 .text          0x000000000001cb50       0x50 string.o
                0x000000000001cb50                strlen
                0x000000000001cb65                strcpy
                0x000000000001cb7e                strncmp
 .text          0x000000000001cba0       0x7c printf.o
                0x000000000001cba0                printf
                0x000000000001cbf5                sprintf
 .text          0x000000000001cc1c      0x12a vsprintf.o
                0x000000000001cc1c                vsprintf
 .text          0x000000000001cd46      0x553 hd.o
                0x000000000001cd46                Task_hd
                0x000000000001ce1e                init_hd
                0x000000000001ce8b                hd_cmd_out
                0x000000000001cf88                get_hd_info
                0x000000000001cfc3                disp_hd_info
                0x000000000001d136                hd_open
                0x000000000001d170                hd_write
                0x000000000001d1f0                hd_read
                0x000000000001d270                hd_handler
 .text          0x000000000001d299      0x4a3 fs_main.o
                0x000000000001d299                Task_fs
                0x000000000001d34d                init_fs
                0x000000000001d44e                mkfs
                0x000000000001d6c4                write_hd
                0x000000000001d700                read_hd
 .text          0x000000000001d73c      0x122 io.o
                0x000000000001d73c                set_cursor_pos
                0x000000000001d7a4                set_video_start
                0x000000000001d80c                init_video
 .text          0x000000000001d85e       0xbf console.o
                0x000000000001d85e                select_console
                0x000000000001d8af                scroll_screen
 .text          0x000000000001d91d      0x8f7 proc.o
                0x000000000001d91d                sys_get_ticks
                0x000000000001d93a                sys_sendrecv
                0x000000000001d9e8                sys_getpid
                0x000000000001d9f5                sys_getppid
                0x000000000001da02                sys_printk
                0x000000000001da3e                va2la
                0x000000000001da6e                msg_send
                0x000000000001dbb3                msg_recv
                0x000000000001ddcc                block
                0x000000000001de00                unblock
                0x000000000001de2f                deadlock
                0x000000000001dea8                inform_int
                0x000000000001df4e                interrupt_wait
                0x000000000001df6a                reset_msg
                0x000000000001df85                init_send_queue
                0x000000000001dfb8                enqueue_send
                0x000000000001e044                dequeue_send
                0x000000000001e0cb                isEmpty
                0x000000000001e0dd                dump_proc
                0x000000000001e139                dump_msg
                0x000000000001e163                failure
                0x000000000001e1bf                halt
 .text          0x000000000001e214      0x844 open.o
                0x000000000001e214                open
                0x000000000001e256                do_open
                0x000000000001e4fc                create_file
                0x000000000001e557                alloc_imap_bit
                0x000000000001e67c                alloc_smap_bits
                0x000000000001e7c9                alloc_inode
                0x000000000001e8d6                alloc_dir_entry
                0x000000000001e9a6                get_inode
 .text          0x000000000001ea58       0x81 misc.o
                0x000000000001ea58                find_file
 .text          0x000000000001ead9      0x101 close.o
                0x000000000001ead9                close
                0x000000000001eb04                do_close
                0x000000000001eb80                clear_inode
 .text          0x000000000001ebda      0x374 rdwt.o
                0x000000000001ebda                write
                0x000000000001ec11                read
                0x000000000001ec48                do_rdwt
 .text          0x000000000001ef4e      0x467 unlink.o
                0x000000000001ef4e                unlink
                0x000000000001ef8a                do_unlink
 .text          0x000000000001f3b5       0xc0 mm_main.o
                0x000000000001f3b5                Task_mm
                0x000000000001f431                alloc_mem
 .text          0x000000000001f475      0x2b3 fork.o
                0x000000000001f475                fork
                0x000000000001f4db                do_fork
 *(.gnu.warning)

.fini
 *(SORT(.fini))
                [!provide]                        PROVIDE (__etext, .)
                [!provide]                        PROVIDE (_etext, .)
                [!provide]                        PROVIDE (etext, .)

.rodata         0x000000000001f728      0x94b
 *(.rodata .rodata.* .gnu.linkonce.r.*)
 .rodata        0x000000000001f728       0xdf start.o
 *fill*         0x000000000001f807        0x1 
 .rodata        0x000000000001f808       0x95 main.o
 .rodata        0x000000000001f89d       0x1e clock.o
 .rodata        0x000000000001f8bb        0xd tty.o
 .rodata        0x000000000001f8c8      0x13f hd.o
 *fill*         0x000000000001fa07        0x1 
 .rodata        0x000000000001fa08       0xeb fs_main.o
 *fill*         0x000000000001faf3        0x1 
 .rodata        0x000000000001faf4      0x159 proc.o
 *fill*         0x000000000001fc4d        0x3 
 .rodata        0x000000000001fc50      0x19e open.o
 .rodata        0x000000000001fdee       0x1e close.o
 .rodata        0x000000000001fe0c       0x17 rdwt.o
 *fill*         0x000000000001fe23        0x1 
 .rodata        0x000000000001fe24      0x17f unlink.o
 *fill*         0x000000000001ffa3        0x1 
 .rodata        0x000000000001ffa4       0x60 mm_main.o
 .rodata        0x0000000000020004       0x6f fork.o

.rodata1
 *(.rodata1)

.eh_frame_hdr
 *(.eh_frame_hdr)
 *(.eh_frame_entry .eh_frame_entry.*)

.eh_frame       0x0000000000020074      0xc14
 *(.eh_frame)
 .eh_frame      0x0000000000020074       0x78 start.o
 .eh_frame      0x00000000000200ec       0xac main.o
                                         0xc4 (松开之前的大小)
 .eh_frame      0x0000000000020198       0xc0 protect.o
                                         0xd8 (松开之前的大小)
 .eh_frame      0x0000000000020258       0x70 clock.o
                                         0x88 (松开之前的大小)
 .eh_frame      0x00000000000202c8       0x40 keyboard.o
                                         0x58 (松开之前的大小)
 .eh_frame      0x0000000000020308      0x140 tty.o
                                        0x158 (松开之前的大小)
 .eh_frame      0x0000000000020448       0x44 printf.o
                                         0x5c (松开之前的大小)
 .eh_frame      0x000000000002048c       0x20 vsprintf.o
                                         0x38 (松开之前的大小)
 .eh_frame      0x00000000000204ac      0x11c hd.o
                                        0x134 (松开之前的大小)
 .eh_frame      0x00000000000205c8       0xa0 fs_main.o
                                         0xb8 (松开之前的大小)
 .eh_frame      0x0000000000020668       0x60 io.o
                                         0x78 (松开之前的大小)
 .eh_frame      0x00000000000206c8       0x40 console.o
                                         0x58 (松开之前的大小)
 .eh_frame      0x0000000000020708      0x2c8 proc.o
                                        0x2e0 (松开之前的大小)
 .eh_frame      0x00000000000209d0      0x10c open.o
                                        0x124 (松开之前的大小)
 .eh_frame      0x0000000000020adc       0x20 misc.o
                                         0x38 (松开之前的大小)
 .eh_frame      0x0000000000020afc       0x60 close.o
                                         0x78 (松开之前的大小)
 .eh_frame      0x0000000000020b5c       0x60 rdwt.o
                                         0x78 (松开之前的大小)
 .eh_frame      0x0000000000020bbc       0x44 unlink.o
                                         0x5c (松开之前的大小)
 .eh_frame      0x0000000000020c00       0x3c mm_main.o
                                         0x54 (松开之前的大小)
 .eh_frame      0x0000000000020c3c       0x4c fork.o
                                         0x64 (松开之前的大小)
 *(.eh_frame.*)

.gcc_except_table
 *(.gcc_except_table .gcc_except_table.*)

.gnu_extab
 *(.gnu_extab*)

.exception_ranges
 *(.exception_ranges .exception_ranges*)
                0x0000000000021c88                . = DATA_SEGMENT_ALIGN (0x1000, 0x1000)

.eh_frame
 *(.eh_frame)
 *(.eh_frame.*)

.gnu_extab
 *(.gnu_extab)

.gcc_except_table
 *(.gcc_except_table .gcc_except_table.*)

.exception_ranges
 *(.exception_ranges .exception_ranges*)

.tdata
 *(.tdata .tdata.* .gnu.linkonce.td.*)

.tbss
 *(.tbss .tbss.* .gnu.linkonce.tb.*)
 *(.tcommon)

.preinit_array  0x0000000000021c88        0x0
                [!provide]                        PROVIDE (__preinit_array_start, .)
 *(.preinit_array)
                [!provide]                        PROVIDE (__preinit_array_end, .)

.init_array     0x0000000000021c88        0x0
                [!provide]                        PROVIDE (__init_array_start, .)
 *(SORT(.init_array.*) SORT(.ctors.*))
 *(.init_array EXCLUDE_FILE(*crtend?.o *crtend.o *crtbegin?.o *crtbegin.o) .ctors)
                [!provide]                        PROVIDE (__init_array_end, .)

.fini_array     0x0000000000021c88        0x0
                [!provide]                        PROVIDE (__fini_array_start, .)
 *(SORT(.fini_array.*) SORT(.dtors.*))
 *(.fini_array EXCLUDE_FILE(*crtend?.o *crtend.o *crtbegin?.o *crtbegin.o) .dtors)
                [!provide]                        PROVIDE (__fini_array_end, .)

.ctors
 *crtbegin.o(.ctors)
 *crtbegin?.o(.ctors)
 *(EXCLUDE_FILE(*crtend?.o *crtend.o) .ctors)
 *(SORT(.ctors.*))
 *(.ctors)

.dtors
 *crtbegin.o(.dtors)
 *crtbegin?.o(.dtors)
 *(EXCLUDE_FILE(*crtend?.o *crtend.o) .dtors)
 *(SORT(.dtors.*))
 *(.dtors)

.jcr
 *(.jcr)

.data.rel.ro
 *(.data.rel.ro.local* .gnu.linkonce.d.rel.ro.local.*)
 *(.data.rel.ro .data.rel.ro.* .gnu.linkonce.d.rel.ro.*)

.dynamic
 *(.dynamic)

.got
 *(.got)
 *(.igot)
                0x0000000000021c88                . = DATA_SEGMENT_RELRO_END (., (SIZEOF (.got.plt) >= 0xc)?0xc:0x0)

.got.plt        0x0000000000021c88        0x0
 *(.got.plt)
 *(.igot.plt)
 .igot.plt      0x0000000000021c88        0x0 kernel.o

.data           0x0000000000021ca0     0x1254
 *(.data .data.* .gnu.linkonce.d.*)
 .data          0x0000000000021ca0     0x1074 kernel.o
                0x0000000000021ca0                GDT
                0x00000000000224a6                IDT
                0x0000000000022cac                TSS
 .data          0x0000000000022d14        0x8 klib.o
                0x0000000000022d14                PrintPos
                0x0000000000022d18                MainPrintPos
 *fill*         0x0000000000022d1c        0x4 
 .data          0x0000000000022d20       0x50 start.o
                0x0000000000022d20                err_msg_list
 .data          0x0000000000022d70        0x0 main.o
 .data          0x0000000000022d70        0x0 protect.o
 .data          0x0000000000022d70        0x0 clock.o
 *fill*         0x0000000000022d70       0x10 
 .data          0x0000000000022d80       0x45 keyboard.o
                0x0000000000022d80                keymap
 .data          0x0000000000022dc5        0x0 tty.o
 .data          0x0000000000022dc5        0x0 printf.o
 .data          0x0000000000022dc5        0x0 vsprintf.o
 .data          0x0000000000022dc5        0x0 hd.o
 .data          0x0000000000022dc5        0x0 fs_main.o
 .data          0x0000000000022dc5        0x0 io.o
 .data          0x0000000000022dc5        0x0 console.o
 *fill*         0x0000000000022dc5       0x1b 
 .data          0x0000000000022de0      0x114 proc.o
                0x0000000000022de0                task_table
                0x0000000000022ee0                syscall_table
 .data          0x0000000000022ef4        0x0 open.o
 .data          0x0000000000022ef4        0x0 misc.o
 .data          0x0000000000022ef4        0x0 close.o
 .data          0x0000000000022ef4        0x0 rdwt.o
 .data          0x0000000000022ef4        0x0 unlink.o
 .data          0x0000000000022ef4        0x0 mm_main.o
 .data          0x0000000000022ef4        0x0 fork.o

.data1
 *(.data1)
                0x0000000000022ef4                _edata = .
                [!provide]                        PROVIDE (edata, .)
                0x0000000000022ef4                . = .
                0x0000000000022ef4                __bss_start = .

.bss            0x0000000000022f00    0x51e40
 *(.dynbss)
 *(.bss .bss.* .gnu.linkonce.b.*)
 .bss           0x0000000000022f00      0x800 kernel.o
 .bss           0x0000000000023700        0x0 start.o
 .bss           0x0000000000023700        0x0 main.o
 .bss           0x0000000000023700        0x0 protect.o
 .bss           0x0000000000023700        0x0 clock.o
 .bss           0x0000000000023700        0x0 keyboard.o
 .bss           0x0000000000023700        0x0 tty.o
 .bss           0x0000000000023700        0x0 printf.o
 .bss           0x0000000000023700        0x0 vsprintf.o
 .bss           0x0000000000023700        0x0 hd.o
 .bss           0x0000000000023700        0x0 fs_main.o
 .bss           0x0000000000023700        0x0 io.o
 .bss           0x0000000000023700        0x0 console.o
 .bss           0x0000000000023700        0x0 proc.o
 .bss           0x0000000000023700        0x0 open.o
 .bss           0x0000000000023700        0x0 misc.o
 .bss           0x0000000000023700        0x0 close.o
 .bss           0x0000000000023700        0x0 rdwt.o
 .bss           0x0000000000023700        0x0 unlink.o
 .bss           0x0000000000023700        0x0 mm_main.o
 .bss           0x0000000000023700        0x0 fork.o
 *(COMMON)
 COMMON         0x0000000000023700    0x51160 start.o
                0x0000000000023700                task_stack_mm
                0x0000000000025f00                task_stack_hd
                0x0000000000028700                inode_table
                0x0000000000040700                task_stack_init
                0x0000000000042f00                dirent_buf
                0x0000000000043100                task_stack_c
                0x0000000000045900                task_stack_b
                0x0000000000048100                inode_buf
                0x0000000000058100                fs_msg
                0x000000000005812c                nr_current_console
                0x0000000000058140                f_desc_table
                0x00000000000582c0                fsbuf
                0x00000000000692c0                hd_msg
                0x00000000000692ec                p_current_proc
                0x0000000000069300                mm_msg
                0x0000000000069340                task_stack_tty
                0x000000000006bb40                ticks
                0x000000000006bb60                task_stack_fs
                0x000000000006e360                proc_table
                0x0000000000071460                task_stack_a
                0x0000000000073c60                smap_buf
                0x0000000000074660                imap_buf
 COMMON         0x0000000000074860       0xc4 main.o
                0x0000000000074860                tty_table
                0x00000000000748e0                console_table
                0x0000000000074920                f_reenter
 COMMON         0x0000000000074924        0x4 keyboard.o
                0x0000000000074924                p_current_tty
 *fill*         0x0000000000074928       0x18 
 COMMON         0x0000000000074940      0x400 hd.o
                0x0000000000074940                hd_buf
                0x0000000000074d40                . = ALIGN ((. != 0x0)?0x4:0x1)
                0x0000000000074d40                . = ALIGN (0x4)
                0x0000000000074d40                . = SEGMENT_START ("ldata-segment", .)
                0x0000000000074d40                . = ALIGN (0x4)
                0x0000000000074d40                _end = .
                [!provide]                        PROVIDE (end, .)
                0x0000000000074d40                . = DATA_SEGMENT_END (.)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x34
 *(.comment)
 .comment       0x0000000000000000       0x34 start.o
                                         0x35 (松开之前的大小)
 .comment       0x0000000000000034       0x35 main.o
 .comment       0x0000000000000034       0x35 protect.o
 .comment       0x0000000000000034       0x35 clock.o
 .comment       0x0000000000000034       0x35 keyboard.o
 .comment       0x0000000000000034       0x35 tty.o
 .comment       0x0000000000000034       0x35 printf.o
 .comment       0x0000000000000034       0x35 vsprintf.o
 .comment       0x0000000000000034       0x35 hd.o
 .comment       0x0000000000000034       0x35 fs_main.o
 .comment       0x0000000000000034       0x35 io.o
 .comment       0x0000000000000034       0x35 console.o
 .comment       0x0000000000000034       0x35 proc.o
 .comment       0x0000000000000034       0x35 open.o
 .comment       0x0000000000000034       0x35 misc.o
 .comment       0x0000000000000034       0x35 close.o
 .comment       0x0000000000000034       0x35 rdwt.o
 .comment       0x0000000000000034       0x35 unlink.o
 .comment       0x0000000000000034       0x35 mm_main.o
 .comment       0x0000000000000034       0x35 fork.o

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info .gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line .debug_line.* .debug_line_end)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges
 *(.debug_ranges)

.debug_macro
 *(.debug_macro)

.gnu.attributes
 *(.gnu.attributes)

/DISCARD/
 *(.note.GNU-stack)
 *(.gnu_debuglink)
 *(.gnu.lto_*)
OUTPUT(kernel.bin elf32-i386)
