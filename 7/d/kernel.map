
分配公共符号
公共符号            大小              文件

task_stack_mm       0x2800            start.o
task_stack_hd       0x2800            start.o
inode_table         0x18000           start.o
task_stack_init     0x2800            start.o
dirent_buf          0x200             start.o
task_stack_c        0x2800            start.o
task_stack_b        0x2800            start.o
inode_buf           0x10000           start.o
tty_table           0x80              main.o
fs_msg              0x2c              start.o
nr_current_console  0x4               start.o
f_desc_table        0x180             start.o
fsbuf               0x11000           start.o
hd_msg              0x2c              start.o
p_current_proc      0x4               start.o
mm_msg              0x2c              start.o
task_stack_tty      0x2800            start.o
p_current_tty       0x4               keyboard.o
ticks               0x4               start.o
task_stack_fs       0x2800            start.o
console_table       0x40              main.o
hd_buf              0x400             hd.o
proc_table          0x3100            start.o
task_stack_a        0x2800            start.o
smap_buf            0xa00             start.o
f_reenter           0x4               main.o
imap_buf            0x200             start.o

舍弃的输入节

 .note.GNU-stack
                0x0000000000000000        0x0 start.o
 .note.GNU-stack
                0x0000000000000000        0x0 main.o
 .note.GNU-stack
                0x0000000000000000        0x0 protect.o
 .note.GNU-stack
                0x0000000000000000        0x0 clock.o
 .note.GNU-stack
                0x0000000000000000        0x0 keyboard.o
 .note.GNU-stack
                0x0000000000000000        0x0 tty.o
 .note.GNU-stack
                0x0000000000000000        0x0 printf.o
 .note.GNU-stack
                0x0000000000000000        0x0 vsprintf.o
 .note.GNU-stack
                0x0000000000000000        0x0 hd.o
 .note.GNU-stack
                0x0000000000000000        0x0 fs_main.o
 .note.GNU-stack
                0x0000000000000000        0x0 io.o
 .note.GNU-stack
                0x0000000000000000        0x0 console.o
 .note.GNU-stack
                0x0000000000000000        0x0 proc.o
 .note.GNU-stack
                0x0000000000000000        0x0 open.o
 .note.GNU-stack
                0x0000000000000000        0x0 misc.o
 .note.GNU-stack
                0x0000000000000000        0x0 close.o
 .note.GNU-stack
                0x0000000000000000        0x0 rdwt.o
 .note.GNU-stack
                0x0000000000000000        0x0 unlink.o
 .note.GNU-stack
                0x0000000000000000        0x0 mm_main.o
 .note.GNU-stack
                0x0000000000000000        0x0 fork.o

内存配置

名称           来源             长度             属性
*default*        0x0000000000000000 0xffffffffffffffff

链结器命令稿和内存映射

段 .text 的地址设置为 0x1b400
LOAD kernel.o
LOAD klib.o
LOAD start.o
LOAD 8259A.o
LOAD main.o
LOAD protect.o
LOAD clock.o
LOAD syscall.o
LOAD keyboard.o
LOAD tty.o
LOAD string.o
LOAD printf.o
LOAD vsprintf.o
LOAD hd.o
LOAD fs_main.o
LOAD io.o
LOAD console.o
LOAD proc.o
LOAD open.o
LOAD misc.o
LOAD close.o
LOAD rdwt.o
LOAD unlink.o
LOAD mm_main.o
LOAD fork.o
                [!provide]                        PROVIDE (__executable_start, 0x8048000)
                0x0000000008048094                . = (0x8048000 + SIZEOF_HEADERS)

.interp
 *(.interp)

.note.gnu.build-id
 *(.note.gnu.build-id)

.hash
 *(.hash)

.gnu.hash
 *(.gnu.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.dyn        0x0000000008048094        0x0
 *(.rel.init)
 *(.rel.text .rel.text.* .rel.gnu.linkonce.t.*)
 .rel.text      0x0000000008048094        0x0 kernel.o
 *(.rel.fini)
 *(.rel.rodata .rel.rodata.* .rel.gnu.linkonce.r.*)
 *(.rel.data.rel.ro .rel.data.rel.ro.* .rel.gnu.linkonce.d.rel.ro.*)
 *(.rel.data .rel.data.* .rel.gnu.linkonce.d.*)
 .rel.data      0x0000000008048094        0x0 kernel.o
 *(.rel.tdata .rel.tdata.* .rel.gnu.linkonce.td.*)
 *(.rel.tbss .rel.tbss.* .rel.gnu.linkonce.tb.*)
 *(.rel.ctors)
 *(.rel.dtors)
 *(.rel.got)
 *(.rel.bss .rel.bss.* .rel.gnu.linkonce.b.*)
 *(.rel.ifunc)

.rel.plt        0x0000000008048094        0x0
 *(.rel.plt)
                [!provide]                        PROVIDE (__rel_iplt_start, .)
 *(.rel.iplt)
 .rel.iplt      0x0000000008048094        0x0 kernel.o
                [!provide]                        PROVIDE (__rel_iplt_end, .)

.init
 *(SORT(.init))

.plt            0x00000000080480a0        0x0
 *(.plt)
 *(.iplt)
 .iplt          0x00000000080480a0        0x0 kernel.o

.plt.got
 *(.plt.got)

.text           0x000000000001b400     0x4393
 *(.text.unlikely .text.*_unlikely .text.unlikely.*)
 *(.text.exit .text.exit.*)
 *(.text.startup .text.startup.*)
 *(.text.hot .text.hot.*)
 *(.text .stub .text.* .gnu.linkonce.t.*)
 .text          0x000000000001b400      0x24e kernel.o
                0x000000000001b400                _start
                0x000000000001b475                divide_error
                0x000000000001b47b                reserved
                0x000000000001b481                nmi
                0x000000000001b487                breakpoint
                0x000000000001b48d                overflow
                0x000000000001b493                out_of_bound
                0x000000000001b499                invalid_opcode
                0x000000000001b49f                no_math_coprocessor
                0x000000000001b4a5                double_fault
                0x000000000001b4ab                coprocessor_error
                0x000000000001b4b1                invalid_tss
                0x000000000001b4b7                not_present
                0x000000000001b4bd                stack_error
                0x000000000001b4c3                general_protect
                0x000000000001b4c7                page_fault
                0x000000000001b4cd                intel_reserved
                0x000000000001b4d3                mcu_fault
                0x000000000001b4d9                align_check
                0x000000000001b4df                mechine
                0x000000000001b4e5                simd_error
                0x000000000001b4fd                irq00_handler
                0x000000000001b538                irq01_handler
                0x000000000001b573                irq02_handler
                0x000000000001b577                irq03_handler
                0x000000000001b57b                irq04_handler
                0x000000000001b57f                irq05_handler
                0x000000000001b583                irq06_handler
                0x000000000001b587                irq07_handler
                0x000000000001b58b                irq08_handler
                0x000000000001b58f                irq09_handler
                0x000000000001b593                irq10_handler
                0x000000000001b597                irq11_handler
                0x000000000001b59b                irq12_handler
                0x000000000001b59f                irq13_handler
                0x000000000001b5a3                irq14_handler
                0x000000000001b5e5                sys_call
                0x000000000001b62c                proc_begin
 *fill*         0x000000000001b64e        0x2 
 .text          0x000000000001b650      0x202 klib.o
                0x000000000001b650                memcpy
                0x000000000001b673                memset
                0x000000000001b68e                memcmp
                0x000000000001b6b7                println
                0x000000000001b6f6                print
                0x000000000001b731                printmsg
                0x000000000001b77b                printchar
                0x000000000001b7a9                backspace
                0x000000000001b7c1                itoa
                0x000000000001b800                in_byte
                0x000000000001b80a                out_byte
                0x000000000001b816                port_read
                0x000000000001b82e                port_write
                0x000000000001b846                disable_int
                0x000000000001b848                enable_int
                0x000000000001b84a                c_sldt
 .text          0x000000000001b852      0x57c start.o
                0x000000000001b852                excep_handler
                0x000000000001b901                irq_handler
                0x000000000001b937                cstart
 *fill*         0x000000000001bdce        0x2 
 .text          0x000000000001bdd0       0x5c 8259A.o
                0x000000000001bdd0                init_8259A
 .text          0x000000000001be2c      0x30b main.o
                0x000000000001be2c                kernel_main
                0x000000000001c087                delay
                0x000000000001c0be                Init
                0x000000000001c128                TaskA
                0x000000000001c12d                TaskB
                0x000000000001c132                TaskC
 .text          0x000000000001c137      0x1f7 protect.o
                0x000000000001c137                init_desc
                0x000000000001c199                init_idt_desc
                0x000000000001c1fb                init_prot
                0x000000000001c271                get_base
                0x000000000001c2bf                get_limit
                0x000000000001c2f4                granularity
 .text          0x000000000001c32e      0x1b6 clock.o
                0x000000000001c32e                schedule
                0x000000000001c3a8                disp_time
                0x000000000001c4b6                clock_handler
 *fill*         0x000000000001c4e4        0xc 
 .text          0x000000000001c4f0       0x34 syscall.o
                0x000000000001c4f0                get_ticks
                0x000000000001c4f8                sendrecv
                0x000000000001c50c                disp_ldt
                0x000000000001c514                getpid
                0x000000000001c51c                getppid
 .text          0x000000000001c524      0x273 keyboard.o
                0x000000000001c524                keyboard_handler
                0x000000000001c5b0                keyboard_read
 .text          0x000000000001c797      0x3ff tty.o
                0x000000000001c797                Task_tty
                0x000000000001c7ff                init_tty
                0x000000000001c859                init_console
                0x000000000001c8df                is_current_console
                0x000000000001c90c                tty_printchar
                0x000000000001c961                tty_printstr
                0x000000000001c9ad                tty_backspace
                0x000000000001ca02                disp_tips
                0x000000000001ca53                reset_kb_buf
                0x000000000001ca93                parse_input
 *fill*         0x000000000001cb96        0xa 
 .text          0x000000000001cba0       0x50 string.o
                0x000000000001cba0                strlen
                0x000000000001cbb5                strcpy
                0x000000000001cbce                strncmp
 .text          0x000000000001cbf0       0x8f printf.o
                0x000000000001cbf0                printf
                0x000000000001cc58                sprintf
 .text          0x000000000001cc7f      0x12a vsprintf.o
                0x000000000001cc7f                vsprintf
 .text          0x000000000001cda9      0x553 hd.o
                0x000000000001cda9                Task_hd
                0x000000000001ce81                init_hd
                0x000000000001ceee                hd_cmd_out
                0x000000000001cfeb                get_hd_info
                0x000000000001d026                disp_hd_info
                0x000000000001d199                hd_open
                0x000000000001d1d3                hd_write
                0x000000000001d253                hd_read
                0x000000000001d2d3                hd_handler
 .text          0x000000000001d2fc      0x4a3 fs_main.o
                0x000000000001d2fc                Task_fs
                0x000000000001d3b0                init_fs
                0x000000000001d4b1                mkfs
                0x000000000001d727                write_hd
                0x000000000001d763                read_hd
 .text          0x000000000001d79f      0x122 io.o
                0x000000000001d79f                set_cursor_pos
                0x000000000001d807                set_video_start
                0x000000000001d86f                init_video
 .text          0x000000000001d8c1       0xbf console.o
                0x000000000001d8c1                select_console
                0x000000000001d912                scroll_screen
 .text          0x000000000001d980      0x8ff proc.o
                0x000000000001d980                sys_get_ticks
                0x000000000001d99d                sys_sendrecv
                0x000000000001da4b                sys_disp_ldt
                0x000000000001da85                sys_getpid
                0x000000000001da92                sys_getppid
                0x000000000001da9f                va2la
                0x000000000001dacf                msg_send
                0x000000000001dc14                msg_recv
                0x000000000001de2d                block
                0x000000000001de61                unblock
                0x000000000001de90                deadlock
                0x000000000001df09                inform_int
                0x000000000001dfaf                interrupt_wait
                0x000000000001dfcb                reset_msg
                0x000000000001dfe6                init_send_queue
                0x000000000001e019                enqueue_send
                0x000000000001e0a5                dequeue_send
                0x000000000001e12c                isEmpty
                0x000000000001e13e                dump_proc
                0x000000000001e19a                dump_msg
                0x000000000001e1c4                failure
                0x000000000001e225                halt
 .text          0x000000000001e27f      0x844 open.o
                0x000000000001e27f                open
                0x000000000001e2c1                do_open
                0x000000000001e567                create_file
                0x000000000001e5c2                alloc_imap_bit
                0x000000000001e6e7                alloc_smap_bits
                0x000000000001e834                alloc_inode
                0x000000000001e941                alloc_dir_entry
                0x000000000001ea11                get_inode
 .text          0x000000000001eac3       0x81 misc.o
                0x000000000001eac3                find_file
 .text          0x000000000001eb44      0x101 close.o
                0x000000000001eb44                close
                0x000000000001eb6f                do_close
                0x000000000001ebeb                clear_inode
 .text          0x000000000001ec45      0x374 rdwt.o
                0x000000000001ec45                write
                0x000000000001ec7c                read
                0x000000000001ecb3                do_rdwt
 .text          0x000000000001efb9      0x467 unlink.o
                0x000000000001efb9                unlink
                0x000000000001eff5                do_unlink
 .text          0x000000000001f420       0xc0 mm_main.o
                0x000000000001f420                Task_mm
                0x000000000001f49c                alloc_mem
 .text          0x000000000001f4e0      0x2b3 fork.o
                0x000000000001f4e0                fork
                0x000000000001f546                do_fork
 *(.gnu.warning)

.fini
 *(SORT(.fini))
                [!provide]                        PROVIDE (__etext, .)
                [!provide]                        PROVIDE (_etext, .)
                [!provide]                        PROVIDE (etext, .)

.rodata         0x000000000001f794      0x99f
 *(.rodata .rodata.* .gnu.linkonce.r.*)
 .rodata        0x000000000001f794      0x107 start.o
 *fill*         0x000000000001f89b        0x1 
 .rodata        0x000000000001f89c       0x96 main.o
 .rodata        0x000000000001f932       0x1e clock.o
 .rodata        0x000000000001f950        0xd tty.o
 *fill*         0x000000000001f95d        0x3 
 .rodata        0x000000000001f960      0x13f hd.o
 *fill*         0x000000000001fa9f        0x1 
 .rodata        0x000000000001faa0       0xeb fs_main.o
 *fill*         0x000000000001fb8b        0x1 
 .rodata        0x000000000001fb8c      0x181 proc.o
 *fill*         0x000000000001fd0d        0x3 
 .rodata        0x000000000001fd10      0x19e open.o
 .rodata        0x000000000001feae       0x1e close.o
 .rodata        0x000000000001fecc       0x17 rdwt.o
 *fill*         0x000000000001fee3        0x1 
 .rodata        0x000000000001fee4      0x17f unlink.o
 *fill*         0x0000000000020063        0x1 
 .rodata        0x0000000000020064       0x60 mm_main.o
 .rodata        0x00000000000200c4       0x6f fork.o

.rodata1
 *(.rodata1)

.eh_frame_hdr
 *(.eh_frame_hdr)
 *(.eh_frame_entry .eh_frame_entry.*)

.eh_frame       0x0000000000020134      0xc20
 *(.eh_frame)
 .eh_frame      0x0000000000020134       0x80 start.o
 .eh_frame      0x00000000000201b4       0xac main.o
                                         0xc4 (松开之前的大小)
 .eh_frame      0x0000000000020260       0xc0 protect.o
                                         0xd8 (松开之前的大小)
 .eh_frame      0x0000000000020320       0x70 clock.o
                                         0x88 (松开之前的大小)
 .eh_frame      0x0000000000020390       0x40 keyboard.o
                                         0x58 (松开之前的大小)
 .eh_frame      0x00000000000203d0      0x140 tty.o
                                        0x158 (松开之前的大小)
 .eh_frame      0x0000000000020510       0x44 printf.o
                                         0x5c (松开之前的大小)
 .eh_frame      0x0000000000020554       0x20 vsprintf.o
                                         0x38 (松开之前的大小)
 .eh_frame      0x0000000000020574      0x11c hd.o
                                        0x134 (松开之前的大小)
 .eh_frame      0x0000000000020690       0xa0 fs_main.o
                                         0xb8 (松开之前的大小)
 .eh_frame      0x0000000000020730       0x60 io.o
                                         0x78 (松开之前的大小)
 .eh_frame      0x0000000000020790       0x40 console.o
                                         0x58 (松开之前的大小)
 .eh_frame      0x00000000000207d0      0x2cc proc.o
                                        0x2e4 (松开之前的大小)
 .eh_frame      0x0000000000020a9c      0x10c open.o
                                        0x124 (松开之前的大小)
 .eh_frame      0x0000000000020ba8       0x20 misc.o
                                         0x38 (松开之前的大小)
 .eh_frame      0x0000000000020bc8       0x60 close.o
                                         0x78 (松开之前的大小)
 .eh_frame      0x0000000000020c28       0x60 rdwt.o
                                         0x78 (松开之前的大小)
 .eh_frame      0x0000000000020c88       0x44 unlink.o
                                         0x5c (松开之前的大小)
 .eh_frame      0x0000000000020ccc       0x3c mm_main.o
                                         0x54 (松开之前的大小)
 .eh_frame      0x0000000000020d08       0x4c fork.o
                                         0x64 (松开之前的大小)
 *(.eh_frame.*)

.gcc_except_table
 *(.gcc_except_table .gcc_except_table.*)

.gnu_extab
 *(.gnu_extab*)

.exception_ranges
 *(.exception_ranges .exception_ranges*)
                0x0000000000021d54                . = DATA_SEGMENT_ALIGN (0x1000, 0x1000)

.eh_frame
 *(.eh_frame)
 *(.eh_frame.*)

.gnu_extab
 *(.gnu_extab)

.gcc_except_table
 *(.gcc_except_table .gcc_except_table.*)

.exception_ranges
 *(.exception_ranges .exception_ranges*)

.tdata
 *(.tdata .tdata.* .gnu.linkonce.td.*)

.tbss
 *(.tbss .tbss.* .gnu.linkonce.tb.*)
 *(.tcommon)

.preinit_array  0x0000000000021d54        0x0
                [!provide]                        PROVIDE (__preinit_array_start, .)
 *(.preinit_array)
                [!provide]                        PROVIDE (__preinit_array_end, .)

.init_array     0x0000000000021d54        0x0
                [!provide]                        PROVIDE (__init_array_start, .)
 *(SORT(.init_array.*) SORT(.ctors.*))
 *(.init_array EXCLUDE_FILE(*crtend?.o *crtend.o *crtbegin?.o *crtbegin.o) .ctors)
                [!provide]                        PROVIDE (__init_array_end, .)

.fini_array     0x0000000000021d54        0x0
                [!provide]                        PROVIDE (__fini_array_start, .)
 *(SORT(.fini_array.*) SORT(.dtors.*))
 *(.fini_array EXCLUDE_FILE(*crtend?.o *crtend.o *crtbegin?.o *crtbegin.o) .dtors)
                [!provide]                        PROVIDE (__fini_array_end, .)

.ctors
 *crtbegin.o(.ctors)
 *crtbegin?.o(.ctors)
 *(EXCLUDE_FILE(*crtend?.o *crtend.o) .ctors)
 *(SORT(.ctors.*))
 *(.ctors)

.dtors
 *crtbegin.o(.dtors)
 *crtbegin?.o(.dtors)
 *(EXCLUDE_FILE(*crtend?.o *crtend.o) .dtors)
 *(SORT(.dtors.*))
 *(.dtors)

.jcr
 *(.jcr)

.data.rel.ro
 *(.data.rel.ro.local* .gnu.linkonce.d.rel.ro.local.*)
 *(.data.rel.ro .data.rel.ro.* .gnu.linkonce.d.rel.ro.*)

.dynamic
 *(.dynamic)

.got
 *(.got)
 *(.igot)
                0x0000000000021d54                . = DATA_SEGMENT_RELRO_END (., (SIZEOF (.got.plt) >= 0xc)?0xc:0x0)

.got.plt        0x0000000000021d54        0x0
 *(.got.plt)
 *(.igot.plt)
 .igot.plt      0x0000000000021d54        0x0 kernel.o

.data           0x0000000000021d60     0x1245
 *(.data .data.* .gnu.linkonce.d.*)
 .data          0x0000000000021d60     0x1074 kernel.o
                0x0000000000021d60                GDT
                0x0000000000022566                IDT
                0x0000000000022d6c                TSS
 .data          0x0000000000022dd4        0x8 klib.o
                0x0000000000022dd4                PrintPos
                0x0000000000022dd8                MainPrintPos
 *fill*         0x0000000000022ddc        0x4 
 .data          0x0000000000022de0       0x50 start.o
                0x0000000000022de0                err_msg_list
 *fill*         0x0000000000022e30       0x10 
 .data          0x0000000000022e40      0x114 main.o
                0x0000000000022e40                task_table
                0x0000000000022f40                syscall_table
 .data          0x0000000000022f54        0x0 protect.o
 .data          0x0000000000022f54        0x0 clock.o
 *fill*         0x0000000000022f54        0xc 
 .data          0x0000000000022f60       0x45 keyboard.o
                0x0000000000022f60                keymap
 .data          0x0000000000022fa5        0x0 tty.o
 .data          0x0000000000022fa5        0x0 printf.o
 .data          0x0000000000022fa5        0x0 vsprintf.o
 .data          0x0000000000022fa5        0x0 hd.o
 .data          0x0000000000022fa5        0x0 fs_main.o
 .data          0x0000000000022fa5        0x0 io.o
 .data          0x0000000000022fa5        0x0 console.o
 .data          0x0000000000022fa5        0x0 proc.o
 .data          0x0000000000022fa5        0x0 open.o
 .data          0x0000000000022fa5        0x0 misc.o
 .data          0x0000000000022fa5        0x0 close.o
 .data          0x0000000000022fa5        0x0 rdwt.o
 .data          0x0000000000022fa5        0x0 unlink.o
 .data          0x0000000000022fa5        0x0 mm_main.o
 .data          0x0000000000022fa5        0x0 fork.o

.data1
 *(.data1)
                0x0000000000022fa5                _edata = .
                [!provide]                        PROVIDE (edata, .)
                0x0000000000022fa5                . = .
                0x0000000000022fa5                __bss_start = .

.bss            0x0000000000022fc0    0x51e40
 *(.dynbss)
 *(.bss .bss.* .gnu.linkonce.b.*)
 .bss           0x0000000000022fc0      0x800 kernel.o
 .bss           0x00000000000237c0        0x0 start.o
 .bss           0x00000000000237c0        0x0 main.o
 .bss           0x00000000000237c0        0x0 protect.o
 .bss           0x00000000000237c0        0x0 clock.o
 .bss           0x00000000000237c0        0x0 keyboard.o
 .bss           0x00000000000237c0        0x0 tty.o
 .bss           0x00000000000237c0        0x0 printf.o
 .bss           0x00000000000237c0        0x0 vsprintf.o
 .bss           0x00000000000237c0        0x0 hd.o
 .bss           0x00000000000237c0        0x0 fs_main.o
 .bss           0x00000000000237c0        0x0 io.o
 .bss           0x00000000000237c0        0x0 console.o
 .bss           0x00000000000237c0        0x0 proc.o
 .bss           0x00000000000237c0        0x0 open.o
 .bss           0x00000000000237c0        0x0 misc.o
 .bss           0x00000000000237c0        0x0 close.o
 .bss           0x00000000000237c0        0x0 rdwt.o
 .bss           0x00000000000237c0        0x0 unlink.o
 .bss           0x00000000000237c0        0x0 mm_main.o
 .bss           0x00000000000237c0        0x0 fork.o
 *(COMMON)
 COMMON         0x00000000000237c0    0x51160 start.o
                0x00000000000237c0                task_stack_mm
                0x0000000000025fc0                task_stack_hd
                0x00000000000287c0                inode_table
                0x00000000000407c0                task_stack_init
                0x0000000000042fc0                dirent_buf
                0x00000000000431c0                task_stack_c
                0x00000000000459c0                task_stack_b
                0x00000000000481c0                inode_buf
                0x00000000000581c0                fs_msg
                0x00000000000581ec                nr_current_console
                0x0000000000058200                f_desc_table
                0x0000000000058380                fsbuf
                0x0000000000069380                hd_msg
                0x00000000000693ac                p_current_proc
                0x00000000000693c0                mm_msg
                0x0000000000069400                task_stack_tty
                0x000000000006bc00                ticks
                0x000000000006bc20                task_stack_fs
                0x000000000006e420                proc_table
                0x0000000000071520                task_stack_a
                0x0000000000073d20                smap_buf
                0x0000000000074720                imap_buf
 COMMON         0x0000000000074920       0xc4 main.o
                0x0000000000074920                tty_table
                0x00000000000749a0                console_table
                0x00000000000749e0                f_reenter
 COMMON         0x00000000000749e4        0x4 keyboard.o
                0x00000000000749e4                p_current_tty
 *fill*         0x00000000000749e8       0x18 
 COMMON         0x0000000000074a00      0x400 hd.o
                0x0000000000074a00                hd_buf
                0x0000000000074e00                . = ALIGN ((. != 0x0)?0x4:0x1)
                0x0000000000074e00                . = ALIGN (0x4)
                0x0000000000074e00                . = SEGMENT_START ("ldata-segment", .)
                0x0000000000074e00                . = ALIGN (0x4)
                0x0000000000074e00                _end = .
                [!provide]                        PROVIDE (end, .)
                0x0000000000074e00                . = DATA_SEGMENT_END (.)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x34
 *(.comment)
 .comment       0x0000000000000000       0x34 start.o
                                         0x35 (松开之前的大小)
 .comment       0x0000000000000034       0x35 main.o
 .comment       0x0000000000000034       0x35 protect.o
 .comment       0x0000000000000034       0x35 clock.o
 .comment       0x0000000000000034       0x35 keyboard.o
 .comment       0x0000000000000034       0x35 tty.o
 .comment       0x0000000000000034       0x35 printf.o
 .comment       0x0000000000000034       0x35 vsprintf.o
 .comment       0x0000000000000034       0x35 hd.o
 .comment       0x0000000000000034       0x35 fs_main.o
 .comment       0x0000000000000034       0x35 io.o
 .comment       0x0000000000000034       0x35 console.o
 .comment       0x0000000000000034       0x35 proc.o
 .comment       0x0000000000000034       0x35 open.o
 .comment       0x0000000000000034       0x35 misc.o
 .comment       0x0000000000000034       0x35 close.o
 .comment       0x0000000000000034       0x35 rdwt.o
 .comment       0x0000000000000034       0x35 unlink.o
 .comment       0x0000000000000034       0x35 mm_main.o
 .comment       0x0000000000000034       0x35 fork.o

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info .gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line .debug_line.* .debug_line_end)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges
 *(.debug_ranges)

.debug_macro
 *(.debug_macro)

.gnu.attributes
 *(.gnu.attributes)

/DISCARD/
 *(.note.GNU-stack)
 *(.gnu_debuglink)
 *(.gnu.lto_*)
OUTPUT(kernel.bin elf32-i386)
